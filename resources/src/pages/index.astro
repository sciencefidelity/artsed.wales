---
import "styles/global.scss"
import { Maybe } from "astro-control"
import { toHTML } from "@portabletext/to-html"
// import { PortableText } from "@portabletext/react"
import sanityClient from "lib/sanityClient"
import { portableTextComponents } from "lib/components"
import { getNestedHeadings } from "lib/utils"
// import PortableText from "components/PortableText"
// import { components } from "components/ptComponents"
import { resourceQuery } from "lib/queries"
import { Resource } from "lib/interfaces"

const response = await sanityClient.fetch(resourceQuery)
const data = response
const { resource } = data as { resource: Resource }

const titles = resource.body.filter(block => block.style !== "normal")
const headings = getNestedHeadings(titles)
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{resource.title}</title>
  </head>
  <body>
    <article class="flex gap-20 container">
      <nav class="w-1/4 sticky self-start top-4 overflow-auto">
        <ul>
          {headings.map(heading => (
            <li>
              <a href={`#${heading.id}`}>{heading.title}</a>
              {heading.items.length > 0 && (
                <ul>
                  {heading.items.map(child => (
                    <li>
                      <a href={`#${child.id}`}>{child.title}</a>
                    </li>
                  ))}
                </ul>
              )}
            </li>
          ))}
        </ul>
      </nav>
      <section class="main w-3/4">
        <h1 class="text-4xl font-bold">{resource.title}</h1>
        <Maybe
          as="div"
          set:html={toHTML(resource.body, {components: portableTextComponents})}
        >
        </Maybe>
        <!-- <PortableText value={resource.body} components={components} /> -->
      </section>
    </article>
  </body>
</html>
