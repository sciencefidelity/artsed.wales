---
import "styles/global.scss"
import { Maybe } from "astro-control"
import { toHTML } from "@portabletext/to-html"
import sanityClient from "lib/sanityClient"
// import Image from "components/Image.astro"
import { portableTextComponents } from "lib/components"
import { getHeadings, kebabCase } from "lib/utils"
import { resourceQuery } from "lib/queries"
import { Resource } from "lib/interfaces"

export async function getStaticPaths() {
  const data: {
    resource: Resource
  } = await sanityClient.fetch(resourceQuery).then(response => response)
  const { resource } = data
  const titles = resource.body.filter(block => block.style !== "normal")
  const headings = getHeadings(titles)
  return headings.map(heading => {
    const slug = kebabCase(heading)
    return {
      params: { slug: slug },
      props: { resource }
    }
  })
}

const { resource } = Astro.props as { resource: Resource }
const blocks = resource.body.filter(block => block.style !== "normal")
const pageHeadings = getHeadings(blocks)
---
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{resource.title}</title>
  </head>
  <body>
    <!-- <header>
      {resource.image &&
        <Image
          className=""
          image={resource.image}
          width={2000}
          height={700}
          lazy={false}
        />
      }
    </header> -->
    <article class="flex gap-20 container">
      <nav class="w-1/4 sticky self-start top-12 overflow-auto mt-32">
        <ul class="sans smooth font-semibold text-xl color-850 list-dash list-inside">
          {pageHeadings.map(heading => (
            <li class="mt-3">
              <a
                href={`/beatboxing/${kebabCase(heading)}`}
                class="hover:underline"
              >{heading}</a>
            </li>
          ))}
        </ul>
      </nav>
      <section class="main w-3/4 pr-44">
        <h1 class="text-7xl mono smooth font-bold color-850 my-12">
          {resource.title}
        </h1>
        <Maybe
          as="div"
          set:html={toHTML(resource.body, {components: portableTextComponents})}
        ></Maybe>
      </section>
    </article>
  </body>
</html>
